install.packages("dagitty")
library(dagitty)
g1 <- dagitty( "dag {
X -> Y
}")
plot(graphLayout(g1))
g1 <- dagitty( "dag {
X -> Y
C -> Y
}")
plot(graphLayout(g1))
plot(graphLayout(g1))
?graphLayout
plot(g1)
?coordinates
coordinates(g1)
library(dagitty)
g1 <- dagitty( "dag {
X -> Y
C -> Y
}")
coordinates(g1) <- list(x = c(C = 2, X = 1, Y = 2),
y = c(C = 2, X = 1, Y = 1))
plot(g1)
n <- 300
X <- rbinom(n, 1, .5)
C <- rnorm(n)
Y <- 1 + 1 * X + C + rnorm(n)
t.test(Y ~ X)
t.test(Y ~ X) -> mt
mt
mt$estimate
diff(mt$estimate)
t.test(Y ~ X)$estimate |> diff()
lm(Y ~ X + C)$coefficients[2]
simul <- t(replicate(1e5, generate_ests()))
generate_ests <- function(n = 300) {
X <- rbinom(n, 1, .5)
C <- rnorm(n)
Y <- 1 + 1 * X + C + rnorm(n)
c(ttest = t.test(Y ~ X)$estimate |> diff(),
lm = lm(Y ~ X + C)$coefficients[2])
}
simul <- t(replicate(1e5, generate_ests()))
simul <- t(replicate(1e3, generate_ests()))
par(mfrow = c(1, 2))
hist(simul[,1])
hist(simul[,2])
cov(simul)
summary(simul)
summary(simul) |> knitr::kable()
apply(simul, 2, sd)
generate_ests2 <- function(n = 300) {
X <- rbinom(n, 1, .5)
C <- rnorm(n)
Y <- 1 + 1 * X + rnorm(n)
c(ttest = t.test(Y ~ X)$estimate |> diff(),
lm = lm(Y ~ X + C)$coefficients[2])
}
simul <- t(replicate(1e3, generate_ests2()))
summary(simul) |> knitr::kable()
apply(simul, 2, sd)
generate_ests2 <- function(n = 300) {
X <- rbinom(n, 1, .5)
C <- rnorm(n)
Y <- 1 + 1 * X + (-1 * (C < 0)) + (1 * (C >= 0)) + rnorm(n)
c(ttest = t.test(Y ~ X)$estimate |> diff(),
lm = lm(Y ~ X + C)$coefficients[2])
}
simul <- t(replicate(1e3, generate_ests2()))
summary(simul) |> knitr::kable()
apply(simul, 2, sd)
generate_ests2 <- function(n = 300) {
X <- rbinom(n, 1, .5)
C <- rnorm(n)
Y <- 1 + 1 * X + (-1 * (C < 0)) * X + (1 * (C >= 0)) + rnorm(n)
c(ttest = t.test(Y ~ X)$estimate |> diff(),
lm = lm(Y ~ X + C)$coefficients[2])
}
simul <- t(replicate(1e3, generate_ests2()))
summary(simul) |> knitr::kable()
apply(simul, 2, sd)
generate_ests2 <- function(n = 300) {
X <- rbinom(n, 1, .5)
C <- rnorm(n)
Y <- 1 + 1 * X + (-1 * (C < 0)) * X + (1 * (C >= 0) * X) + C + rnorm(n)
c(ttest = t.test(Y ~ X)$estimate |> diff(),
lm = lm(Y ~ X + C)$coefficients[2])
}
simul <- t(replicate(1e3, generate_ests2()))
summary(simul) |> knitr::kable()
apply(simul, 2, sd)
generate_ests2 <- function(n = 300) {
X <- rbinom(n, 1, .5)
C <- rnorm(n)
U <- rnorm(n)
Y <- 1 + 1 * X + (-1 * (C < 0)) * X + (1 * (C >= 0) * X) + U + rnorm(n)
c(ttest = t.test(Y ~ X)$estimate |> diff(),
lm = lm(Y ~ X + C)$coefficients[2])
}
simul <- t(replicate(1e3, generate_ests2()))
summary(simul) |> knitr::kable()
apply(simul, 2, sd)
generate_ests2 <- function(n = 300) {
X <- rbinom(n, 1, .5)
C <- rnorm(n)
U <- rnorm(n)
Y <- 1 + 1 * X + (-1 * (C < 0)) * X + (1 * (C >= 0) * X) + U * 2 + rnorm(n)
c(ttest = t.test(Y ~ X)$estimate |> diff(),
lm = lm(Y ~ X + C)$coefficients[2])
}
simul <- t(replicate(1e3, generate_ests2()))
summary(simul) |> knitr::kable()
apply(simul, 2, sd)
generate_ests2 <- function(n = 300) {
X <- rbinom(n, 1, .5)
C <- rnorm(n)
U <- rnorm(n)
Y <- 1 + 1 * X + X * C + rnorm(n)
c(ttest = t.test(Y ~ X)$estimate |> diff(),
lm = lm(Y ~ X + C)$coefficients[2])
}
simul <- t(replicate(1e3, generate_ests2()))
summary(simul) |> knitr::kable()
apply(simul, 2, sd)
generate_ests2 <- function(n = 300) {
X <- rbinom(n, 1, .5)
C <- rnorm(n)
U <- rnorm(n)
Y <- 1 + 1 * X + 5 * X * C + rnorm(n)
c(ttest = t.test(Y ~ X)$estimate |> diff(),
lm = lm(Y ~ X + C)$coefficients[2])
}
simul <- t(replicate(1e3, generate_ests2()))
summary(simul) |> knitr::kable()
apply(simul, 2, sd)
generate_ests2 <- function(n = 300) {
X <- rbinom(n, 1, .35)
C <- rnorm(n)
U <- rnorm(n)
Y <- 1 + 1 * X + 5 * X * C + rnorm(n)
c(ttest = t.test(Y ~ X)$estimate |> diff(),
lm = lm(Y ~ X + C)$coefficients[2])
}
simul <- t(replicate(1e3, generate_ests2()))
summary(simul) |> knitr::kable()
apply(simul, 2, sd)
generate_ests2 <- function(n = 300) {
X <- rbinom(n, 1, .35)
C <- rnorm(n)
U <- rnorm(n)
Y <- 1 + 1 * X + 5 * X * (C > 1) - 3 * (C < 1) + rnorm(n)
c(ttest = t.test(Y ~ X)$estimate |> diff(),
lm = lm(Y ~ X + C)$coefficients[2])
}
simul <- t(replicate(1e3, generate_ests2()))
summary(simul) |> knitr::kable()
apply(simul, 2, sd)
g2 <- dagitty( "dag {
X -> Y
C -> Y
C -> X
}")
coordinates(g2) <- list(x = c(C = 1.5, X = 1, Y = 2),
y = c(C = 2, X = 1, Y = 1))
plot(g2)
